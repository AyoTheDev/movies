// Generated by Dagger (https://google.github.io/dagger).
package com.ayo.data.repository;

import com.ayo.api.services.MovieDbService;
import com.ayo.data.SharedPrefs;
import com.google.gson.Gson;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class MovieDbRepository_Factory implements Factory<MovieDbRepository> {
  private final Provider<MovieDbService> serviceProvider;

  private final Provider<SharedPrefs> sharedPrefsProvider;

  private final Provider<Gson> gsonProvider;

  public MovieDbRepository_Factory(
      Provider<MovieDbService> serviceProvider,
      Provider<SharedPrefs> sharedPrefsProvider,
      Provider<Gson> gsonProvider) {
    this.serviceProvider = serviceProvider;
    this.sharedPrefsProvider = sharedPrefsProvider;
    this.gsonProvider = gsonProvider;
  }

  @Override
  public MovieDbRepository get() {
    return new MovieDbRepository(
        serviceProvider.get(), sharedPrefsProvider.get(), gsonProvider.get());
  }

  public static MovieDbRepository_Factory create(
      Provider<MovieDbService> serviceProvider,
      Provider<SharedPrefs> sharedPrefsProvider,
      Provider<Gson> gsonProvider) {
    return new MovieDbRepository_Factory(serviceProvider, sharedPrefsProvider, gsonProvider);
  }

  public static MovieDbRepository newMovieDbRepository(
      MovieDbService service, SharedPrefs sharedPrefs, Gson gson) {
    return new MovieDbRepository(service, sharedPrefs, gson);
  }
}
